<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- - Location of the Log4J config file, for initialization and refresh checks. - Applied by Log4jConfigListener. -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>

	<!-- - Configures Log4J for this web app. - As this context specifies a context-param "log4jConfigLocation", its file path - is used to load the Log4J configuration, including periodic refresh checks. -->
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>

	<!-- Configuration locations must consist of one or more comma- or space-delimited
		fully-qualified @Configuration classes. Fully-qualified packages may also be
		specified for component-scanning -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>

	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- 页面装饰框架 过滤器 -->
	<filter>
	    <filter-name>sitemesh</filter-name>
	    <filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
	    <!-- 
	    <init-param>
	    	<param-name>configFile</param-name>
	    	<param-value>/WEB-INF/sitemesh3.xml</param-value>
	    </init-param>
	     -->
	  </filter>
	   <filter-mapping>
			<filter-name>sitemesh</filter-name>
			<url-pattern>*.jsp</url-pattern>
			<url-pattern>*.jspx</url-pattern>
			<url-pattern>*.do</url-pattern>
		</filter-mapping>
	<!-- 登录过滤器 -->
	<filter>
		<description> 登录过滤器 </description>
		<filter-name>loginFilter</filter-name>
		<filter-class>
			cn.com.pengyue.web.LoginFilter
		</filter-class>
		<init-param>
			<param-name>toLoginNeedUrlPattern</param-name>
			<param-value>login\.((html)|(jsp)|(do))</param-value>
		</init-param>
    	<init-param>
      		<param-name>loginUrl</param-name>
      		<param-value>login.do</param-value>
    	</init-param>
    	<!--<init-param>
      		<param-name>logPath</param-name>
      		<param-value>true</param-value>
    	</init-param>
    	<init-param>
      		<param-name>sessionAttrName</param-name>
      		<param-value>loginUser</param-value>
    	</init-param> -->
	</filter>
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
		<url-pattern>*.jspx</url-pattern>
		<url-pattern>*.shtml</url-pattern>
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	
	<!-- 项目 定义字符 编码为 UTF-8 -->
	<filter>
		<description> 定义字符 编码过滤器 </description>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
    	<init-param>
      		<param-name>forceEncoding</param-name>
      		<param-value>true</param-value>
    	</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<!-- -Hibernate open session in view -开启session 在显示JSP页面时 -->
	<filter>
		<description> 开启session 在显示JSP页面时 </description>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>




	<!--低权限不能访问高权限业务过滤器-->
	<filter> 
		<filter-name>resourceFilter</filter-name> 
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
	</filter> 
	<filter-mapping> 
		<filter-name>resourceFilter</filter-name> 
		<url-pattern>*.do</url-pattern> 
	</filter-mapping>
	
	
	
	
	 
	<!-- Declare a Spring MVC DispatcherServlet as usual -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		 
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- Druid内置提供了一个StatViewServlet用于展示Druid的统计信息。 -->
	<servlet>
      <servlet-name>DruidStatView</servlet-name>
      <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	  </servlet>
	  <servlet-mapping>
	      <servlet-name>DruidStatView</servlet-name>
	      <url-pattern>/druid/*</url-pattern>
	  </servlet-mapping>

	<!-- map all requests for /main/* to the dispatcher servlet -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
